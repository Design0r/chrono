package templates

import "strconv"
import "fmt"
import "calendar/schemas"
import "calendar/service"
import "strings"

templ Calendar(month schemas.Month) {
	@Index() {
		<div class="px-5">
			@Info(month)
			<div class="grid grid-cols-7">
				@WeekdayHeader("Monday")
				@WeekdayHeader("Tuesday")
				@WeekdayHeader("Wednesday")
				@WeekdayHeader("Thursday")
				@WeekdayHeader("Friday")
				@WeekdayHeader("Saturday")
				@WeekdayHeader("Sunday")
				for range month.Offset {
					<div></div>
				}
				for _, day := range month.Days {
					@Day(month.Year, month.Number, day)
				}
			</div>
		</div>
	}
}

templ WeekdayHeader(name string) {
	<div class="bg-base-300 p-2 text-center text-lg">{ name }</div>
}

templ Day(year int, month int, day schemas.Day) {
	{{ url := fmt.Sprintf("/%d/%d/%d", year, month, day.Number) }}
	{{strDay := strconv.Itoa(day.Number)

dayId := fmt.Sprintf("day-%v", strDay)
dayTarget := fmt.Sprintf("#%v", dayId)
	}}
	<div
		if day.Name == "Saturday" || day.Name == "Sunday" {
			class="bg-base-300 rounded m-2 p-0 flex min-h-24 shadow-xl"
		} else {
			class="bg-neutral-content text-neutral rounded m-2 p-0 flex min-h-24 shadow-xl"
		}
	>
		<div class="card-actions justify-end p-2 text-2xl ">
			<div class="align-bottom min-w-8">{ strDay }</div>
		</div>
		<div
			class="card-body p-2 h-full bg-neutral rounded-r"
		>
			<div
				class="card-body px-0 pb-2 pt-0 h-full bg-neutral rounded-r"
				id={ dayId }
			>
				for _, event := range day.Events {
					@Event(event)
				}
			</div>
			<button
				hx-post={ url }
				hx-vals="js:{name: getEventName()}"
				hx-target={ dayTarget }
				hx-swap="beforeend"
				class="btn hover:border-base-content rounded text-base-content text-center border border-dashed icon-outlined w-full text-2xl"
			>add_circle</button>
		</div>
	</div>
}

templ Event(event schemas.Event) {
	{{
	bgColor := service.GenerateHSL(int(event.UserID))
	eventId := fmt.Sprintf("event-%v", event.ID)
	deleteUrl := fmt.Sprintf("#%v", eventId)
	}}
	<div
		id={ eventId }
		{ templ.Attributes{"style":fmt.Sprintf("background-color: %v;", bgColor)}... }
		class="bg-blue-500 text-center relative rounded"
	>
		<button hx-swap="delete" hx-target={ deleteUrl } hx-delete={ fmt.Sprintf("/events/%v", event.ID) } class="btn btn-ghost rounded text-xl p-0 icon-outlined absolute right-0">close</button>
		<div>{ strings.Title(event.Name) }</div>
		<div>{ event.Username }</div>
	</div>
}

templ Info(month schemas.Month) {
	{{
	strYear := strconv.Itoa(month.Year)
	prevStrYear := strconv.Itoa(month.Year - 1)
	nextStrYear := strconv.Itoa(month.Year + 1)
	prevMNum := month.Number - 1
	nextMNum := month.Number + 1
	if prevMNum <= 0 {
		prevMNum = 12
	}
	if nextMNum > 12 {
		nextMNum = nextMNum % 12
		if nextMNum == 0 {
			nextMNum = 1
		}
	}
	prevStrMonth := strconv.Itoa(prevMNum)
	nextStrMonth := strconv.Itoa(nextMNum)

	strMonth := strconv.Itoa((month.Number))
	urlPrevMonth := fmt.Sprintf("/%v/%v", strYear, prevStrMonth)
	urlNextMonth := fmt.Sprintf("/%v/%v", strYear, nextStrMonth)
	urlPrevYear := fmt.Sprintf("/%v/%v", prevStrYear, strMonth)
	urlNextYear := fmt.Sprintf("/%v/%v", nextStrYear, strMonth)
	}}
	<div class="flex items-center align-middle">
		<div class="flex space-x-5 pb-5 ">
			<div class="flex w-30">
				<a href={ templ.URL(urlPrevMonth) } class="text-2xl icon-outlined">arrow_back</a>
				<div class="text-2xl text-center w-40">{ month.Name }</div>
				<a href={ templ.URL(urlNextMonth) } class="text-2xl icon-outlined">arrow_forward</a>
			</div>
			<div class="flex">
				<a href={ templ.URL(urlPrevYear) } class="text-2xl icon-outlined">arrow_back</a>
				<div class="text-2xl w-20 text-center">{ strYear }</div>
				<a href={ templ.URL(urlNextYear) } class="text-2xl icon-outlined">arrow_forward</a>
			</div>
		</div>
		<select class="select select-bordered h-2 w-full max-w-xs text-xl" name="eventName" id="eventName">
			<option value="urlaub">Urlaub</option>
			<option value="workation">Workation</option>
			<option value="krank">Krank</option>
			<option value="home office">Home Office</option>
		</select>
	</div>
	<script>
  function getEventName(){
    return document.getElementById("eventName").value
  }
  </script>
}
