package templates

import "strconv"
import "fmt"
import "calendar/db/repo"
import "calendar/schemas"
import "strings"

templ Index(month schemas.Month, events map[int][]repo.Event) {
	<!DOCTYPE html>
	<html data-theme="dim" lang="en">
		<head>
			<meta charset="UTF-8"/>
			<link rel="stylesheet" href="/static/css/output.css"/>
			<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
			<script src="/static/js/htmx-min.js"></script>
			<title>Apic Calendar</title>
		</head>
		<body class="space-y-5">
			@Header()
			@Calendar(month, events)
		</body>
	</html>
}

templ Calendar(month schemas.Month, events map[int][]repo.Event) {
	<div class="px-5">
		@Info(month)
		<div class="grid grid-cols-7">
			@WeekdayHeader("Monday")
			@WeekdayHeader("Tuesday")
			@WeekdayHeader("Wednesday")
			@WeekdayHeader("Thursday")
			@WeekdayHeader("Friday")
			@WeekdayHeader("Saturday")
			@WeekdayHeader("Sunday")
			for range month.Offset {
				<div></div>
			}
			for _, day := range month.Days {
				@Day(month.Year, month.Number, day, events)
			}
		</div>
	</div>
}

templ Header() {
	<div class="navbar bg-base-300">
		<a class="btn btn-ghost text-xl">Apic Calendar</a>
	</div>
}

templ Info(month schemas.Month) {
	{{ strYear := strconv.Itoa(month.Year) }}
	{{ prevStrYear := strconv.Itoa(month.Year - 1) }}
	{{ nextStrYear := strconv.Itoa(month.Year + 1) }}
	{{
	prevMNum := month.Number - 1
	nextMNum := month.Number + 1
	if prevMNum <= 0 {
		prevMNum = 12
	}
	if nextMNum > 12 {
		nextMNum = nextMNum % 12
		if nextMNum == 0 {
			nextMNum = 1
		}
	}
	prevStrMonth := strconv.Itoa(prevMNum)
	nextStrMonth := strconv.Itoa(nextMNum)
	}}
	{{ strMonth := strconv.Itoa((month.Number)) }}
	{{ urlPrevMonth := strings.Join([]string{"/", strYear, "/", prevStrMonth}, "") }}
	{{ urlNextMonth := strings.Join([]string{"/", strYear, "/", nextStrMonth}, "") }}
	{{ urlPrevYear := strings.Join([]string{"/", prevStrYear, "/", strMonth}, "") }}
	{{ urlNextYear := strings.Join([]string{"/", nextStrYear, "/", strMonth}, "") }}
	<div class="flex space-x-5 pb-5">
		<a href={ templ.SafeURL(urlPrevMonth) }>&lt-</a>
		<div class="text-2xl">{ month.Name }</div>
		<a href={ templ.SafeURL(urlNextMonth) }>-&gt</a>
		<a href={ templ.SafeURL(urlPrevYear) }>&lt-</a>
		<div class="text-2xl">{ strYear }</div>
		<a href={ templ.SafeURL(urlNextYear) }>-&gt</a>
	</div>
}

templ WeekdayHeader(name string) {
	<div class="bg-base-300 p-2 text-center text-lg">{ name }</div>
}

templ Day(year int, month int, day schemas.Day, events map[int][]repo.Event) {
	{{ url := fmt.Sprintf("/%d/%d/%d", year, month, day.Number) }}
	{{ strDay := strconv.Itoa(day.Number) }}
	<div
		id={ strDay }
		if day.Name == "Saturday" || day.Name == "Sunday" {
			class="bg-base-300 rounded m-2 p-0 flex min-h-24 shadow-xl"
		} else {
			class="bg-neutral-content text-neutral rounded m-2 p-0 flex min-h-24 shadow-xl"
		}
	>
		<div class="card-actions justify-end p-2 text-2xl ">
			<div class="align-bottom min-w-6">{ strDay }</div>
		</div>
		<div
			hx-post={ url }
			hx-swap="beforeend"
			class="card-body p-2 h-full bg-neutral rounded-r"
		>
			for _, event := range events[day.Number] {
				@Event(event)
			}
		</div>
	</div>
}

templ Event(event repo.Event) {
	<div class="bg-blue-500 text-center rounded">Event ID: { strconv.Itoa(int(event.ID)) }</div>
}
