package templates

import "strconv"
import "fmt"
import "calendar/db/repo"
import "calendar/schemas"
import "time"

templ Index() {
	<!DOCTYPE html>
	<html data-theme="dim" lang="en">
		<head>
			<meta charset="UTF-8"/>
			<link rel="stylesheet" href="/static/css/output.css"/>
			<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
			<script src="/static/js/htmx-min.js"></script>
			<title>Apic Calendar</title>
		</head>
		<body class="space-y-5">
			@Header()
			{ children... }
		</body>
	</html>
}

templ Home() {
	@Index() {
		<div>Home</div>
	}
}

templ Login() {
	@Index() {
		<div class="flex my-10">
			<div class="align-middle flex m-auto">
				<div>
					<h1 class="font-bold text-xl">Log in</h1>
					<br/>
					<form class="w-max" method="post">
						<div>
							<label for="email">Email</label>
							<br/>
							<input
								class="input w-full input-bordered"
								type="email"
								required
							/>
							<br/>
							<br/>
						</div>
						<div>
							<label for="password">Password</label>
							<br/>
							<input
								class="input w-full input-bordered"
								type="password"
							/>
							<br/>
							<br/>
						</div>
						<button
							class="btn btn-primary"
							type="submit"
						>Log in</button>
					</form>
				</div>
			</div>
		</div>
	}
}

templ Signup() {
	@Index() {
		<div class="flex my-10">
			<div class="align-middle flex m-auto">
				<div>
					<h1 class="font-bold text-xl">Sign up</h1>
					<br/>
					<form class="w-max" method="post">
						<div>
							<label for="name">Name</label>
							<br/>
							<input
								class="input w-full input-bordered"
								type="text"
								required
							/>
							<br/>
							<br/>
						</div>
						<div>
							<label for="email">Email</label>
							<br/>
							<input
								class="input w-full input-bordered"
								type="email"
								required
							/>
							<br/>
							<br/>
						</div>
						<div>
							<label for="password">Password</label>
							<br/>
							<input
								class="input w-full input-bordered"
								type="password"
							/>
							<br/>
							<br/>
						</div>
						<button
							class="btn btn-primary"
							type="submit"
						>Sign up</button>
					</form>
				</div>
			</div>
		</div>
	}
}

templ Calendar(month schemas.Month, events map[int][]repo.Event) {
	@Index() {
		<div class="px-5">
			@Info(month)
			<div class="grid grid-cols-7">
				@WeekdayHeader("Monday")
				@WeekdayHeader("Tuesday")
				@WeekdayHeader("Wednesday")
				@WeekdayHeader("Thursday")
				@WeekdayHeader("Friday")
				@WeekdayHeader("Saturday")
				@WeekdayHeader("Sunday")
				for range month.Offset {
					<div></div>
				}
				for _, day := range month.Days {
					@Day(month.Year, month.Number, day, events)
				}
			</div>
		</div>
	}
}

templ Header() {
	{{
	now := time.Now()
	month := strconv.Itoa(int(now.Month()))
	year := strconv.Itoa(now.Year())
	url := fmt.Sprintf("/%v/%v", year, month)
	}}
	<div class="navbar flex justify-between bg-base-300">
		<div>
			<a href="/" class="btn btn-ghost text-xl">Apic Chrono</a>
			<a href={ templ.URL(url) } class="btn btn-ghost">Calendar</a>
		</div>
		<div class="justify-end">
			<a href="/login" class="btn btn-ghost">Login</a>
			<a href="/signup" class="btn btn-ghost">Signup</a>
			<form action="/logout" method="post">
				<button type="submit" class="btn btn-ghost">Logout</button>
			</form>
		</div>
	</div>
}

templ Info(month schemas.Month) {
	{{
	strYear := strconv.Itoa(month.Year)
	prevStrYear := strconv.Itoa(month.Year - 1)
	nextStrYear := strconv.Itoa(month.Year + 1)
	prevMNum := month.Number - 1
	nextMNum := month.Number + 1
	if prevMNum <= 0 {
		prevMNum = 12
	}
	if nextMNum > 12 {
		nextMNum = nextMNum % 12
		if nextMNum == 0 {
			nextMNum = 1
		}
	}
	prevStrMonth := strconv.Itoa(prevMNum)
	nextStrMonth := strconv.Itoa(nextMNum)

	strMonth := strconv.Itoa((month.Number))
	urlPrevMonth := fmt.Sprintf("/%v/%v", strYear, prevStrMonth)
	urlNextMonth := fmt.Sprintf("/%v/%v", strYear, nextStrMonth)
	urlPrevYear := fmt.Sprintf("/%v/%v", prevStrYear, strMonth)
	urlNextYear := fmt.Sprintf("/%v/%v", nextStrYear, strMonth)
	}}
	<div class="flex space-x-5 pb-5 ">
		<div class="flex w-30">
			<a href={ templ.URL(urlPrevMonth) } class="text-2xl icon-outlined">arrow_back</a>
			<div class="text-2xl text-center w-40">{ month.Name }</div>
			<a href={ templ.URL(urlNextMonth) } class="text-2xl icon-outlined">arrow_forward</a>
		</div>
		<div class="flex">
			<a href={ templ.URL(urlPrevYear) } class="text-2xl icon-outlined">arrow_back</a>
			<div class="text-2xl w-20 text-center">{ strYear }</div>
			<a href={ templ.URL(urlNextYear) } class="text-2xl icon-outlined">arrow_forward</a>
		</div>
	</div>
}

templ WeekdayHeader(name string) {
	<div class="bg-base-300 p-2 text-center text-lg">{ name }</div>
}

templ Day(year int, month int, day schemas.Day, events map[int][]repo.Event) {
	{{ url := fmt.Sprintf("/%d/%d/%d", year, month, day.Number) }}
	{{ strDay := strconv.Itoa(day.Number) }}
	<div
		id={ strDay }
		if day.Name == "Saturday" || day.Name == "Sunday" {
			class="bg-base-300 rounded m-2 p-0 flex min-h-24 shadow-xl"
		} else {
			class="bg-neutral-content text-neutral rounded m-2 p-0 flex min-h-24 shadow-xl"
		}
	>
		<div class="card-actions justify-end p-2 text-2xl ">
			<div class="align-bottom min-w-8">{ strDay }</div>
		</div>
		<div
			hx-post={ url }
			hx-swap="beforeend"
			class="card-body p-2 h-full bg-neutral rounded-r"
		>
			for _, event := range events[day.Number] {
				@Event(event)
			}
		</div>
	</div>
}

templ Event(event repo.Event) {
	<div class="bg-blue-500 text-center rounded">Event ID: { strconv.Itoa(int(event.ID)) }</div>
}
