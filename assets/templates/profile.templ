package templates

import (
	"chrono/internal/domain"
	"fmt"
)

templ ProfilePage(user domain.User, notifications []domain.Notification) {
	@Index(&user, notifications) {
		@Profile(user, notifications)
	}
}

templ Profile(user domain.User, notifications []domain.Notification) {
	{{
			bgColor := domain.Color.HSLToString(domain.Color.HexToHSL(user.Color))
	}}
	<div id="profile">
		<div class="container mx-auto max-w-lg px-6">
			<div class="space-y-2 bg-base-100 rounded-xl px-8 py-10">
				<h1 class="font-bold text-xl mb-0">Profile</h1>
				<div class="divider mb-4 mt-0"></div>
				<div class="grid gap-4 grid-cols-2">
					<p>Username</p>
					<p>{ user.Username }</p>
					<p>Email</p>
					<p>{ user.Email }</p>
					<p>Admin</p>
					<p>{ fmt.Sprint(user.IsSuperuser) }</p>
					<p>Yearly Vacation</p>
					<p>{ fmt.Sprint(user.VacationDays) }</p>
					<p>Color</p>
					<p
						class="max-w-40 rounded-full "
						{ templ.Attributes{"style":fmt.Sprintf("background-color: %v;", bgColor)}... }
					></p>
					<p>Joined</p>
					<p>{ user.CreatedAt.Format("2. January 2006") }</p>
					<p>Last Edit</p>
					<p>{ user.EditedAt.Format("2. January 2006") }</p>
				</div>
			</div>
		</div>
		<div class="container mx-auto max-w-lg px-6 mt-4">
			<button
				hx-get="/profile/edit"
				hx-swap="outerHTML"
				hx-target="#profile"
				class="btn btn-soft btn-primary animate-color"
			>
				<span class="icon-outlined pr-2">edit</span>
				Handle Profile
			</button>
		</div>
	</div>
}

templ ProfileEditForm(user domain.User, notifications []domain.Notification) {
	<div id="profile">
		<div class="container mx-auto max-w-lg px-6">
			<form hx-patch="/profile" hx-swap="outerHTML" hx-target="#profile">
				<div class="space-y-2 bg-base-100 rounded-xl px-8 py-10">
					<h1 class="font-bold text-xl">Profile</h1>
					<div class="divider mb-4 mt-0"></div>
					<div class="grid gap-2 grid-cols-2">
						<label for="name">Name</label>
						<input
							id="name"
							class="input input-bordered"
							type="text"
							name="name"
							value={ user.Username }
							required
						/>
						<label for="email">Email</label>
						<input
							id="email"
							class="input w-full input-bordered"
							type="email"
							name="email"
							value={ user.Email }
							required
						/>
						<p>Admin</p>
						<p>{ fmt.Sprint(user.IsSuperuser) }</p>
						<p>Yearly Vacation</p>
						<p>{ fmt.Sprint(user.VacationDays) }</p>
						<label for="color">Color</label>
						<input
							id="color"
							class="input w-full input-bordered rounded-xl"
							type="color"
							name="color"
							value={ user.Color }
							required
						/>
						<label for="password">New Password</label>
						<input
							id="password"
							class="input w-full input-bordered"
							type="password"
							name="password"
						/>
						<p>Joined</p>
						<p>{ user.CreatedAt.Format("2. January 2006") }</p>
						<p>Last Edit</p>
						<p>{ user.EditedAt.Format("2. January 2006") }</p>
					</div>
				</div>
				<button
					type="submit"
					class="mt-4 btn btn-primary animate-color"
				>
					<span class="icon-outlined pr-2">save</span>
					Save Profile
				</button>
			</form>
		</div>
	</div>
}
