package templates

import (
	"chrono/config"
	"chrono/internal/domain"
	"fmt"
)

templ Team(users []domain.UserWithVacation, currUser domain.User, notifications []domain.Notification) {
	@Index(&currUser, notifications) {
		@TeamTable(users, currUser, notifications, false) {
			if currUser.IsSuperuser {
				<div class="mt-4">
					<button
						hx-get="/team/form"
						hx-target="#team-table"
						hx-swap="outerHTML"
						class="btn btn-soft btn-primary animate-color"
					><span class="icon-outlined pr-2">edit</span>Handle Team</button>
				</div>
			}
		}
	}
}

templ TeamHTMX(users []domain.UserWithVacation, currUser domain.User, notifications []domain.Notification) {
	@TeamTable(users, currUser, notifications, false) {
		if currUser.IsSuperuser {
			<div class="mt-4">
				<button
					hx-get="/team/form"
					hx-target="#team-table"
					hx-swap="outerHTML"
					class="btn btn-soft btn-primary animate-color"
				><span class="icon-outlined pr-2">edit</span>Handle Team</button>
			</div>
		}
	}
	@Message("Saved changes", "success")
}

templ TeamForm(users []domain.UserWithVacation, currUser domain.User, notifications []domain.Notification) {
	<form id="team-table" hx-patch="/team">
		@TeamTable(users, currUser, notifications, true) {
			if currUser.IsSuperuser {
				<div class="mt-4">
					<button
						type="submit"
						hx-patch="/team"
						hx-target="#team-table"
						hx-swap="outerHTML"
						class="btn btn-primary animate-color"
					><span class="icon-outlined pr-2">save</span>Save Team</button>
				</div>
			}
		}
	</form>
}

templ TeamTable(users []domain.UserWithVacation, currUser domain.User, notifications []domain.Notification, form bool) {
	<div id="team-table" class="p-2 my-2">
		<div class="overflow-x-auto bg-info/3">
			<table class="table table-zebra table-md">
				<thead>
					<tr class="bg-base-200 text-base-content border-b-1.5 border-primary/65">
						<th>ID</th>
						<th>Name</th>
						<th class="text-center">Vacation Days</th>
						<th class="text-center">Used</th>
						<th class="text-center">Remaining</th>
						<th>Email</th>
						<th>Admin</th>
					</tr>
				</thead>
				<tbody>
					for _, user := range users {
						@TeamRow(currUser, user, form)
					}
				</tbody>
			</table>
		</div>
		{ children... }
	</div>
}

templ TeamRow(currUser domain.User, user domain.UserWithVacation, form bool) {
	{{
	cfg := config.GetConfig()
	css := "hover:bg-primary/10 pt-8 border-b-1 border-primary/25 text-base-content/80 hover:text-primary animate-color"
	if user.VacationDays == 0 && user.Username != cfg.BotName {
		css = "bg-error/35 hover:bg-error/50 pt-8 border-2 border-error/70 text-base-content/80 animate-color"
	}
	h, s, l := domain.Color.HexToHSL(user.Color)
	borderColor := fmt.Sprintf("hsla(%.0f, %.1f%%, %.1f%%, 0.6)", h, s*100, l*100)
	bgColor := fmt.Sprintf("hsla(%.0f, %.1f%%, %.1f%%, 0.20)", h, s*100, l*100)
	textColor := fmt.Sprintf("hsla(%.0f, %.1f%%, %.1f%%, 1)", h, s*100, l*100)
	}}
	<tr class={ css }>
		<th>
			<div
				tabindex="0"
				role="button"
				class="avatar placeholder p-0 "
			>
				<div
					class="w-8 !flex items-center justify-center border rounded-full text-neutral-content"
					{ templ.Attributes{"style":fmt.Sprintf("background-color: %v; border-color: %v;", bgColor, borderColor)}... }
				>
					<div
						class="text-sm text-center"
						{ templ.Attributes{"style":fmt.Sprintf("color: %v;", textColor)}... }
					>
						{ fmt.Sprint(user.ID) }
					</div>
				</div>
			</div>
		</th>
		<th>{ user.Username }</th>
		if form {
			<td><input type="number" class="input input-bordered h-8" value={ fmt.Sprint(user.VacationDays) } name={ fmt.Sprint(user.ID) }/></td>
		} else {
			<td class="text-center">{ fmt.Sprint(user.VacationDays) }</td>
		}
		<td class="text-center">{ fmt.Sprint(user.VacationUsed) }</td>
		<td class="text-center">{ fmt.Sprint(user.VacationRemaining) }</td>
		<td>{ user.Email }</td>
		@AdminCheckbox(currUser, user.ID, user.IsSuperuser, form)
	</tr>
}
