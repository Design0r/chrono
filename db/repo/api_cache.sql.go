// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: api_cache.sql

package repo

import (
	"context"
)

const cacheExists = `-- name: CacheExists :one
SELECT EXISTS(
    SELECT 1 FROM api_cache
    WHERE year = ?
)
`

func (q *Queries) CacheExists(ctx context.Context, year int64) (int64, error) {
	row := q.db.QueryRowContext(ctx, cacheExists, year)
	var column_1 int64
	err := row.Scan(&column_1)
	return column_1, err
}

const createCache = `-- name: CreateCache :exec
INSERT INTO api_cache (year)
VALUES (?)
`

func (q *Queries) CreateCache(ctx context.Context, year int64) error {
	_, err := q.db.ExecContext(ctx, createCache, year)
	return err
}
