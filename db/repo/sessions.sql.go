// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: sessions.sql

package repo

import (
	"context"
	"time"
)

const CreateSession = `-- name: CreateSession :one
INSERT INTO sessions (id, valid_until, user_id)
VALUES (?, ?, ?)
RETURNING id, valid_until, created_at, edited_at, user_id
`

type CreateSessionParams struct {
	ID         string    `json:"id"`
	ValidUntil time.Time `json:"valid_until"`
	UserID     int64     `json:"user_id"`
}

func (q *Queries) CreateSession(ctx context.Context, arg CreateSessionParams) (Session, error) {
	row := q.db.QueryRowContext(ctx, CreateSession, arg.ID, arg.ValidUntil, arg.UserID)
	var i Session
	err := row.Scan(
		&i.ID,
		&i.ValidUntil,
		&i.CreatedAt,
		&i.EditedAt,
		&i.UserID,
	)
	return i, err
}

const DeleteAllSessions = `-- name: DeleteAllSessions :exec
DELETE from sessions
`

func (q *Queries) DeleteAllSessions(ctx context.Context) error {
	_, err := q.db.ExecContext(ctx, DeleteAllSessions)
	return err
}

const DeleteSession = `-- name: DeleteSession :exec
DELETE from sessions 
WHERE id = ?
`

func (q *Queries) DeleteSession(ctx context.Context, id string) error {
	_, err := q.db.ExecContext(ctx, DeleteSession, id)
	return err
}

const GetSessionById = `-- name: GetSessionById :one
SELECT id, valid_until, created_at, edited_at, user_id FROM sessions
WHERE id = ?
`

func (q *Queries) GetSessionById(ctx context.Context, id string) (Session, error) {
	row := q.db.QueryRowContext(ctx, GetSessionById, id)
	var i Session
	err := row.Scan(
		&i.ID,
		&i.ValidUntil,
		&i.CreatedAt,
		&i.EditedAt,
		&i.UserID,
	)
	return i, err
}

const GetUserFromSession = `-- name: GetUserFromSession :one
SELECT u.id, u.username, u.email, u.password, u.vacation_days, u.is_superuser, u.created_at, u.edited_at, u.color, u.role, u.enabled FROM sessions s
JOIN users u ON s.user_id = u.id
WHERE s.id = ?
`

func (q *Queries) GetUserFromSession(ctx context.Context, id string) (User, error) {
	row := q.db.QueryRowContext(ctx, GetUserFromSession, id)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Username,
		&i.Email,
		&i.Password,
		&i.VacationDays,
		&i.IsSuperuser,
		&i.CreatedAt,
		&i.EditedAt,
		&i.Color,
		&i.Role,
		&i.Enabled,
	)
	return i, err
}
